{"name": "Test CRUD operation Update(PUT).", "status": "broken", "statusDetails": {"message": "KeyError: 'booking_id'", "trace": "self = <tests.normal_CRUD_test_cases.test_case_full_CRUD_operation.TestCRUDBooking object at 0x000001A7C1C83620>\n\n    @pytest.fixture()\n    def get_booking_id(self):  # need to function to get booking id\n        response = post_request(url=APIConstants.url_create_booking(),\n                                auth=None,\n                                headers=Util().common_headers_json(),\n                                payload=payload_create_booking(),\n                                in_json=False)\n        # After getting the response, we want booking_id\n>       booking_id = response.json()[\"booking_id\"]\nE       KeyError: 'booking_id'\n\ntest_case_full_CRUD_operation.py:58: KeyError"}, "description": "Verify that full update with the booking ID and Token is working.", "start": 1712853589651, "stop": 1712853589651, "uuid": "d195ff0a-0107-4e82-99d1-ea341a3864e3", "historyId": "c4d52ec3fb5fb8d01d22e0712c908ce8", "testCaseId": "c4d52ec3fb5fb8d01d22e0712c908ce8", "fullName": "tests.normal_CRUD_test_cases.test_case_full_CRUD_operation.TestCRUDBooking#test_update_booking_id_token", "labels": [{"name": "parentSuite", "value": "tests.normal_CRUD_test_cases"}, {"name": "suite", "value": "test_case_full_CRUD_operation"}, {"name": "subSuite", "value": "TestCRUDBooking"}, {"name": "host", "value": "INDELNB1516"}, {"name": "thread", "value": "17000-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.normal_CRUD_test_cases.test_case_full_CRUD_operation"}]}